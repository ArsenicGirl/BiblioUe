<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login BiblioUe</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
    <link rel="stylesheet" type="text/css" href="resources/styles/index.css">
</head>
<body>

    <nav>
        <div class="logo">

            <img  src="resources/assets/logo-ue.svg" alt="logo" class="header-icon">
      
        </div>
    </nav>

   <main>
    <div class="container">

        <div class="back_box">
            <div class="backBox_login">

                <h2 class="title is-5 has-text-white">¿Tienes una cuenta?</h2>
                <p>Inicia sesión</p>
                <input class="button is-link "id="btn_login_form" type="submit" value="Ingresar">
            </div>
            <div class="backBox_register">

                <h2 class="title is-5 has-text-white">¿No tienes una cuenta?</h2>
                <p>Ingresa tus datos como estudiante o admistrador y 
                    <br> registrate.</p>
                <input class="button is-link" id="btn_register_form" type="submit" value="Registrarse">
            </div>
        </div>
         <!--estructura de los formularios, se usa el action /validar porque así decidí llamar a la acción-->
        <div class="container_login_register">

            <form id="login_form" class="login-form">
                <h2 class="title is-4 has-text-link">Inicia sesión</h2>
            <div class="field">
                <label class="label" for="loginEmail">Correo</label>
                <div class="control">
                    <input class="input" type="email" name="loginEmail" id="loginEmail" placeholder="Correo institucional">
                </div>
            </div>
            <div class="field">
                <label class="label" for="loginPassword">Contraseña</label>
                <div class="control">
                    <input class="input" type="text" id="loginPassword" name="loginPassword" placeholder="Ingrese su contraseña">
                </div>
            </div>

            <input id="btn_validar" class="button is-link has-background-link-dark" type="submit" value="Iniciar sesión">

            </form> 
       
            <form id="register_form" class="register-form">
         
                <h2 class="title is-4 has-text-link">Registrate</h2>
                <div class="field">
                    <label class="label" for="name">Nombres</label>
                    <div class="control">
                        <input class="input" type="text" id="name" placeholder="Nombre(s)">
                    </div>
                    <label class="label" for="lastName">Apellidos</label>
                    <div class="control">
                        <input class="input" type="text" id="lastName" placeholder="Apellidos">
                    </div>
                    <div class="field">
                        <label class="label" for="email">Correo</label>
                        <div class="control">
                            <input class="input" type="email" id="email" placeholder="Correo institucional">
                        </div>
                    </div>

                </div>

            <div class="field">
                <label class="label" for="carnet">Número de identificación</label>
                <div class="control">
                    <input class="input" type="number" id="carnet" min="100000000" max="9999999999" placeholder="Número de identificación de su carnet">
                </div>

                <div class="field">
                    <label class="label" for="password">Contraseña</label>
                    <div class="control">
                        <input class="input" type="text" id="password" placeholder="Ingrese su contraseña">
                    </div>
                </div>
                
                <input id="btn-registrar" class="button is-link has-background-link-dark" type="submit" value="Registrarse"><br> <br>
            </form>
        </form>
        </div>
    </div>
    </main>
    <script src="resources/scripts/loginRegister.js"></script> 

    <!--envio de info registro-->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>

    const url ='http://localhost:3000/api/student'
 
    let results = ''
    const formEstudiantes = document.querySelector('.register-form')  
    const stud_firstName = document.getElementById('name')
    const stud_lastName = document.getElementById('lastName')
    const stud_email = document.getElementById('email')
    const stud_carnet = document.getElementById('carnet')
    const stud_password = document.getElementById('password')
    let opcion = ''


    const save = async (data) =>{
    await axios({
        method: 'post',
        url: 'http://localhost:3000/api/student',
        data: data
    }).then(d=>{
        console.log(d)
    }).catch(e=>console.warn(e))
    }


    
    formEstudiantes.addEventListener('submit', (e) => {
    e.preventDefault();
    let data = {
        stud_firstName: stud_firstName.value,
        stud_lastName: stud_lastName.value,
        stud_email: stud_email.value,
        stud_carnet: parseInt(stud_carnet.value),
        stud_password: stud_password.value  
    };
    console.log(data);
//eliminar los datos del formularoi cuando se cree un registro
    save(data); // Llama a la función save original
    stud_firstName.value = '';
    stud_lastName.value = '';
    stud_email.value = '';
    stud_carnet.value = '';
    stud_password.value = '';
    opcion = cleanForm(document.getElementById("register_form").reset());
});



//login
const url2 = 'http://localhost:3000/auth'; 
const loginEmail = document.getElementById('loginEmail');
const loginPassword = document.getElementById('loginPassword');

// Función para mostrar una notificación
const notificacion = (mensaje, estilo) => {
    const div = document.createElement("div");
    div.className = `notification is-${estilo}`;
    div.appendChild(document.createTextNode(mensaje));

    // Mostrar la notificación
    const container = document.querySelector(".container");
    const registerBooks = document.querySelector("#register-books");
    container.insertBefore(div, registerBooks);

    setTimeout(() => {
        div.remove();
    }, 3000); // La notificación desaparecerá después de 3 segundos
};

login_form.addEventListener('submit', async (e) => {
    e.preventDefault();
    let data = {
        stud_email: loginEmail.value,
        stud_password: loginPassword.value  
    };

    // Registro de lo que se está enviando en la solicitud
    console.log('Solicitud de inicio de sesión:', data);
    
    // Realizar la solicitud de inicio de sesión
    axios({
        method: 'post',
        url: url2,
        data: data
    })
    .then(response => {
        // Registro de la respuesta del servidor
        console.log('Respuesta del servidor:', response);

        if (response.status === 200) {
            // Inicio de sesión exitoso, redirigir al usuario a /adminIndex
             window.location.href = '/library';
         
        } else{
            // Mostrar un mensaje de error
            notificacion('Inicio de sesión fallido', 'danger');
        }
    })
    .catch(error => {
        // Registro de errores
        console.error('Error en la solicitud:', error);
        notificacion('El correo o contraseña es incorrecto', 'danger');
    });
});

    
    </script>

</body>
</html>